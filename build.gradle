apply plugin: "com.android.library"

import com.android.build.OutputFile

project.ext.react = [
    enableHermes: false,  // clean and rebuild if changing
]

//apply from: "../../node_modules/react-native/react.gradle"

//def enableSeparateBuildPerCPUArchitecture = false
//def enableProguardInReleaseBuilds = false
def jscFlavor = 'org.webkit:android-jsc:+'
def enableHermes = project.ext.react.get("enableHermes", false);

android {
//    compileSdkVersion rootProject.ext.compileSdkVersion
    compileSdkVersion 32

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    defaultConfig {
//        applicationId "com.awesomeproject"
//        minSdkVersion rootProject.ext.minSdkVersion
        minSdkVersion 24
//        targetSdkVersion rootProject.ext.targetSdkVersion
        targetSdkVersion 32
//        versionCode 1
//        versionName "1.0"
    }
//    splits {
//        abi {
//            reset()
//            enable enableSeparateBuildPerCPUArchitecture
//            universalApk false  // If true, also generate a universal APK
//            include "armeabi-v7a", "x86", "arm64-v8a", "x86_64"
//        }
//    }
//    signingConfigs {
//        debug {
//            storeFile file('debug.keystore')
//            storePassword 'android'
//            keyAlias 'androiddebugkey'
//            keyPassword 'android'
//        }
//    }
    buildTypes {
//        debug {
//            signingConfig signingConfigs.debug
//        }
        release {
            // Caution! In production, you need to generate your own keystore file.
            // see https://reactnative.dev/docs/signed-apk-android.
//            signingConfig signingConfigs.debug
//            minifyEnabled enableProguardInReleaseBuilds

            minifyEnabled false //<---- new add
            proguardFiles getDefaultProguardFile("proguard-android.txt"), "proguard-rules.pro"
        }
    }

    //    applicationVariants.all { variant ->
    //        variant.outputs.each { output ->
    //            // For each separate APK per architecture, set a unique version code as described here:
    //            // https://developer.android.com/studio/build/configure-apk-splits.html
    //            def versionCodes = ["armeabi-v7a": 1, "x86": 2, "arm64-v8a": 3, "x86_64": 4]
    //            def abi = output.getFilter(OutputFile.ABI)
    //            if (abi != null) {  // null for the universal-debug, universal-release variants
    //                output.versionCodeOverride =
    //                        versionCodes.get(abi) * 1048576 + defaultConfig.versionCode
    //            }
    //
    //        }
    //    }
}

dependencies {
    implementation fileTree(dir: "libs", include: ["*.jar"])
    implementation "com.facebook.react:react-native:0.63.3"  // From node_modules
    implementation 'androidx.appcompat:appcompat:1.4.1'
    implementation "androidx.swiperefreshlayout:swiperefreshlayout:1.0.0"

    debugImplementation("com.facebook.flipper:flipper:0.54.0") {
      exclude group:'com.facebook.fbjni'
    }

    debugImplementation("com.facebook.flipper:flipper-network-plugin:0.54.0") {
        exclude group:'com.facebook.flipper'
        exclude group:'com.squareup.okhttp3', module:'okhttp'
    }

    debugImplementation("com.facebook.flipper:flipper-fresco-plugin:0.54.0") {
        exclude group:'com.facebook.flipper'
    }

    if (enableHermes) {
        def hermesPath = "../../node_modules/hermes-engine/android/";
        debugImplementation files(hermesPath + "hermes-debug.aar")
        releaseImplementation files(hermesPath + "hermes-release.aar")
    } else {
        implementation jscFlavor
    }
}

task copyDownloadableDepsToLibs(type: Copy) {
    from configurations.implementation
    into 'libs'
}

//apply from: file("../../node_modules/@react-native-community/cli-platform-android/native_modules.gradle"); applyNativeModulesAppBuildGradle(project)
